<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2014 Clarius Consulting SA

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == '' And '$(MSBuildToolsVersion)' &gt;= '12.0'">$(MSBuildToolsVersion)</VisualStudioVersion>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == '' And '$(MSBuildToolsVersion)' &lt; '12.0'">11.0</VisualStudioVersion>
    <!-- Define $(Dev) to compare with the simple VS numeric version i.e. '15' directly in MSBuild -->
    <Dev Condition="'$(Dev)' == '' Or '$(Dev)' == '.'">$(VisualStudioVersion.Substring(0, $(VisualStudioVersion.IndexOf('.'))))</Dev>
    <DefineConstants>$(DefineConstants);DEV$(Dev)</DefineConstants>
    <DefineConstants>$(DefineConstants);VS$(VisualStudioVersion.Replace('.', ''))</DefineConstants>
    <IsAppLocalIde Condition="'$(VsInstallRoot)' != '' And '$(VisualStudioVersion)' &gt;= '15.0'">true</IsAppLocalIde>
  </PropertyGroup>

  <!-- This is the property that causes VS 2012+ to insist on one-way update of the project -->
  <PropertyGroup Condition="'$(VisualStudioVersion)' &gt;= '11.0'">
    <MinimumVisualStudioVersion>$(VisualStudioVersion)</MinimumVisualStudioVersion>
  </PropertyGroup>
  <!-- This is an additional property added by VS 2013 -->
  <PropertyGroup Condition="'$(VisualStudioVersion)' &gt;= '12.0'">
    <OldToolsVersion>4.0</OldToolsVersion>
  </PropertyGroup>

  <!-- On build servers and command line, this property is not available, so we redefine it in 
             terms of the environment variables created by VS when installed -->
  <PropertyGroup Condition="'$(DevEnvDir)' == ''">
    <VSCommToolsVar>VS$(VisualStudioVersion.Replace('.', ''))COMNTOOLS</VSCommToolsVar>
    <DevEnvDir Condition="'$(IsAppLocalIde)' != 'true'">$([System.Environment]::ExpandEnvironmentVariables('%$(VSCommToolsVar)%'))..\IDE\</DevEnvDir>
    <DevEnvDir Condition="'$(IsAppLocalIde)' == 'true'">$([System.IO.Path]::Combine('$(VsInstallRoot)', 'Common7', 'IDE'))\</DevEnvDir>
    <DevEnvDir>$([System.IO.Path]::GetFullPath('$(DevEnvDir)'))</DevEnvDir>
  </PropertyGroup>

  <!-- VSSDK directories setup -->
  <PropertyGroup Condition="'$(VSSDK)' == ''">
    <VSSDKVar>VSSDK$(VisualStudioVersion.Replace('.', ''))Install</VSSDKVar>
    <VSSDK Condition="'$(IsAppLocalIde)' != 'true'">$([System.Environment]::ExpandEnvironmentVariables('%$(VSSDKVar)%'))</VSSDK>
    <VSSDK Condition="'$(IsAppLocalIde)' == 'true'">$([System.IO.Path]::Combine('$(VsInstallRoot)', 'VSSDK'))\</VSSDK>
  </PropertyGroup>
  <PropertyGroup>
    <VSSDK20>$(VSSDK)VisualStudioIntegration\Common\Assemblies\v2.0\</VSSDK20>
    <VSSDK40>$(VSSDK)VisualStudioIntegration\Common\Assemblies\v4.0\</VSSDK40>
    <VSToolsPath Condition="'$(IsAppLocalIde)' != 'true'">$(ProgramFiles)\MSBuild\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <VSToolsPath Condition="'$(IsAppLocalIde)' == 'true'">$(VsInstallRoot)\MSBuild\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>

  <PropertyGroup>
    <PublicAssemblies>$([System.IO.Path]::Combine('$(DevEnvDir)', 'PublicAssemblies'))\</PublicAssemblies>
    <PrivateAssemblies>$([System.IO.Path]::Combine('$(DevEnvDir)', 'PrivateAssemblies'))\</PrivateAssemblies>
  </PropertyGroup>

  <!-- Set startup process to always start with the experimental instance and logging enabled -->
  <PropertyGroup>
    <StartAction>Program</StartAction>
    <StartProgram>$(DevEnvDir)devenv.exe</StartProgram>
    <StartArguments>/rootSuffix Exp</StartArguments>
  </PropertyGroup>

  <PropertyGroup>
    <ClariusVisualStudioPropsImported>true</ClariusVisualStudioPropsImported>
  </PropertyGroup>
</Project>